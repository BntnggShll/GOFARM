<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>